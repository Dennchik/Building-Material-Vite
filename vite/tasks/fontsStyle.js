import fs from 'fs';
import path from 'path';
import { fonts } from './fonts';
import { paths } from '../config/path';

// üîπ –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SCSS —Å @include font-face
function generateFontsScss() {
  const fontsDir = paths.fontsSrc;
  const targetFile = paths.fontsScss;

  let content = '@use "variables.scss" as *;\r\n@use "mixins.scss" as *;\r\n';

  if (fs.existsSync(fontsDir)) {
    const items = fs.readdirSync(fontsDir);
    let c_fontName = '';
    items.forEach((item) => {
      const fontName = item.split('.')[0];
      if (c_fontName !== fontName) {
        content += `@include font-face("${fontName}", "${fontName}", 400, "normal");\r\n`;
      }
      c_fontName = fontName;
    });
  }

  fs.mkdirSync(path.dirname(targetFile), { recursive: true });
  fs.writeFileSync(targetFile, content);
  console.log(`‚úÖ _fonts.scss —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${targetFile}`);
}

// üîπ –ü–ª–∞–≥–∏–Ω –¥–ª—è Vite
export function fontStyle() {
  return {
    name: 'fonts-style-plugin',
    buildStart() {
      // –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç—ã –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º SCSS
      fonts(paths.fontsSrc);
      generateFontsScss();
    },
    configureServer(server) {
      const fontsPath = paths.fontsSrc;
      if (!fs.existsSync(fontsPath)) return;

      fs.watch(fontsPath, { persistent: true }, (_eventType, filename) => {
        if (!filename) return;
        const ext = path.extname(filename).toLowerCase();
        if (ext !== '.ttf') return; // —Ä–µ–∞–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ TTF

        console.log('‚ö° –®—Ä–∏—Ñ—Ç—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º _fonts.scss...');
        fonts(fontsPath);
        generateFontsScss();
        server.ws.send({ type: 'full-reload' });
      });
    },
  };
}

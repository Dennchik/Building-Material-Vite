//! vite.config.js
import { defineConfig, loadEnv } from 'vite'; //üëà

//* Path
import { dirname, resolve } from 'node:path'; //üëà
import { fileURLToPath } from 'node:url'; //üëà
import { paths } from './vite/config/path.js';
//* Plugins
import { visualizer } from 'rollup-plugin-visualizer';
import postcssSortMediaQueries from 'postcss-sort-media-queries';
import postcssMediaMinMax from 'postcss-media-minmax'; //üëà
import autoprefixer from 'autoprefixer'; //üëà
import { viteConvertPugInHtml } from '@mish.dev/vite-convert-pug-in-html'; //üëà

//* Tasks
import { moveHtmlFiles } from './vite/tasks/moveHtmlFiles.js'; //üëà
import { fontStyle } from './vite/tasks/fontsStyle'; //üëà
import { convertImagesToWebp } from './vite/tasks/webp.js'; //üëà
import { compileScss } from './vite/tasks/scss.js'; //üëà
import { fonts } from './vite/tasks/fonts.js'; //üëà
//* app
import { app } from './vite/config/app.js';
import { getPugConfig } from './vite/config/pug-config.js';

const __dirname = dirname(fileURLToPath(import.meta.url)); //üëà

// üîπ –°–Ω–∞—á–∞–ª–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç—ã –ø–µ—Ä–µ–¥ dev/build
// fonts('./public/fonts');
fonts(paths.fonts.src);

function renderChunks(deps) {
  let chunks = {};
  Object.keys(deps).forEach((key) => {
    if (['swiper'].includes(key)) return;
    chunks[key] = [key];
  });
  return chunks;
}

export default defineConfig(({ command, mode }) => {
  const isProd = command === 'build';

  return {
    base: './',
    plugins: [
      fonts(),
      ...(isProd ? [compileScss()] : []), // üëà –ó–∞–ø—É—Å–∫–∞–µ–º compileScss() —Ç–æ–ª—å–∫–æ –ø—Ä–∏ build
      fontStyle(),
      convertImagesToWebp(app.webp),
      viteConvertPugInHtml(getPugConfig(isProd)),
      moveHtmlFiles(), // üëà –∫–ª—é—á–µ–≤–æ–π –ø–ª–∞–≥–∏–Ω –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è HTML

      // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω-—Å–±–æ—Ä–∫–µ
      ...(isProd
        ? [
            visualizer({
              filename: './build/chunk-report.html', // –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á—ë—Ç
              template: 'treemap', // –≤–∏–¥ –æ—Ç—á—ë—Ç–∞: 'sunburst', 'treemap', 'network'
              gzipSize: true, // –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä –≤ gzip
              brotliSize: true, // –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä –≤ brotli
              open: true, // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç—å –æ—Ç—á—ë—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            }),
          ]
        : []),
    ],
    server: {
      open: true,
    },
    css: {
      devSourcemap: true,
      postcss: {
        plugins: [
          autoprefixer(app.autoprefixer),
          postcssSortMediaQueries(app.postcssSortMediaQueries),
          //*–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å–æ–≤
          ...(isProd ? [] : [postcssMediaMinMax(app.postcssMediaMinMax)]), //üëà
        ],
      },
      preprocessorOptions: { scss: {} },
    },
    resolve: {
      alias: { '@': resolve(__dirname, 'src') },
    },

    build: {
      outDir: 'build',
      emptyOutDir: true,
      sourcemap: !isProd,

      // ‚úÖ 1. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ chunks > 244 –ö–ë
      chunkSizeWarningLimit: 500, // üëà –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞

      // ‚úÖ 2. –ë—ã—Å—Ç—Ä–∞—è –º–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ esbuild (–≤–º–µ—Å—Ç–æ Terser). –≠—Ç–æ —É—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ–¥–∞–∫—à–Ω-—Å–±–æ—Ä–∫—É –≤ 5‚Äì10 —Ä–∞–∑
      minify: 'esbuild',

      // ‚úÖ 3. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è pre-bundle –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π. –£—Å–∫–æ—Ä—è–µ—Ç —Å—Ç–∞—Ä—Ç dev-—Å–µ—Ä–≤–µ—Ä–∞ –∏ HMR
      commonjsOptions: {
        transformMixedEsModules: true,
      },

      rollupOptions: {
        output: {
          // ‚úÖ 4. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ chunk. –ß—Ç–æ–±—ã –±–æ–ª—å—à–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –Ω–µ –ø–æ–ø–∞–¥–∞–ª–∏ –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª
          // manualChunks(id) {
          //   if (id.includes('node_modules')) {
          //     return id.split('node_modules/')[1].split('/')[0];
          //   }
          // },

          // manualChunks: { 'swiper-bundle': ['swiper/bundle'] },

          manualChunks(id) {
            if (id.includes('node_modules')) {
              if (id.includes('lodash') || id.includes('date-fns')) {
                return 'utils';
              }
              if (id.includes('chart.js') || id.includes('d3')) {
                return 'charts';
              }
              return 'vendor';
            }
          },
        },
      },
      // ‚úÖ 5. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ dev-—Ä–µ–∂–∏–º–µ
      optimizeDeps: {
        include: ['lodash', 'axios'], // —Å—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞–∫–µ—Ç—ã
        exclude: [], // —Å—é–¥–∞ –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ —Ç—è–∂—ë–ª—ã–µ, —Ä–µ–¥–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ
      },
    },
  };
});

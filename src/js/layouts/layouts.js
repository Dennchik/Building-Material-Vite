//* ‚úÖ - [ Hiding an element when scrolling ]
export function shadowScrollHeader() {
  const handleScroll = () => {
    const headerMain = document.querySelector('.header');
    const pageContainer = document.querySelector('.page__main-content');
    const pageContainerTop = pageContainer.getBoundingClientRect().top;

    if (headerMain) {
      if (pageContainerTop < -50) {
        headerMain.classList.add('with-shadow');
      } else if (pageContainerTop <= 0) {
        headerMain.classList.remove('with-shadow');
      }
    }
  };

  window.addEventListener('scroll', handleScroll);
  //üîπ –û—á–∏—Å—Ç–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  return () => {
    window.removeEventListener('scroll', handleScroll);
  };
}

//* ‚úÖ - [ –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ] -
export function addFavorites(className) {
  const els = document.querySelectorAll(className);
  els.forEach((el) => {
    el.addEventListener('click', () => {
      el.classList.toggle('like');
    });
  });
}

//* ‚úÖ - [ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –º–µ–Ω—é ] -
export function sidebarMenuHandle() {
  const burgerButtons = document.querySelectorAll('.burger-button');
  const header = document.querySelector('.header');
  const sidebarMenu = document.querySelector('.sidebar-menu');

  burgerButtons.forEach((burgerButton) => {
    burgerButton.addEventListener('click', () => {
      burgerButton.classList.toggle('is-active');

      if (burgerButton.classList.contains('is-active')) {
        toggleSidebarMenu(sidebarMenu);
        header.classList.add('with-shadow');
      } else if (!burgerButton.classList.contains('is-active')) {
        toggleSidebarMenu(sidebarMenu);
        header.classList.remove('with-shadow');
      }
    });
  });

  window.addEventListener('resize', () => {
    burgerButtons.forEach((burgerButton) => {
      if (burgerButton.classList.contains('is-active')) {
        document.body.classList.remove('no-scroll');
        sidebarMenu.classList.remove('_open-menu');
        burgerButton.classList.remove('is-active');
      }
    });
  });
}

//* ‚úÖ - [ Hiding an element when scrolling ]
export function hideTopMenu() {
  let lastScrollTop = 0; // –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–∑–∏—Ü–∏—è —Å–∫—Ä–æ–ª–ª–∞
  const target = document.querySelector('.header__top-menu'); // —ç–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–±–∞–≤–ª—è–µ–º/—É–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å

  window.addEventListener('scroll', () => {
    const scrollTop = window.scrollY || document.documentElement.scrollTop;

    if (scrollTop < lastScrollTop) {
      target.classList.remove('active');
      // üìà –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö
    } else {
      // üìâ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
      target.classList.add('active');
    }

    lastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  });
}

//* ‚úÖ - [ –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ ]
export function addToBlock() {
  document.addEventListener('DOMContentLoaded', function () {
    const contents = document.querySelectorAll('.content');

    contents.forEach((content) => {
      // ‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞
      const button = content.querySelector('.show-more');

      if (button) {
        // ‚ö†Ô∏è –¢–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏
        const buttonText = button.querySelector('span');
        const backText = buttonText.textContent;
        // ‚ö†Ô∏è –°–∫–æ–ª—å–∫–æ –±–ª–æ–∫–æ–≤ –≤–∏–¥–Ω–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
        let visibleCount = 1;
        // –°–∫–æ–ª—å–∫–æ –±–ª–æ–∫–æ–≤ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–∞–∂–∞—Ç–∏–∏
        const blocksToShow = 1;

        // ‚ö†Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–ª–æ–∫–æ–≤, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∫—Ä—ã–≤–∞–µ–º
        const showBlocks = content.querySelectorAll('.section');

        showBlocks.forEach((showBlock, index) => {
          if (index >= visibleCount) {
            // ‚ö†Ô∏è –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –±–ª–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ
            showBlock.classList.add('hidden');
          }
        });

        // ‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π –∫–Ω–æ–ø–∫–∏
        const updateButtonStyle = () => {
          // ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
          if (window.innerWidth >= 768) {
            if (visibleCount % 2 === 0) {
              // ‚ö†Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —á–µ—Ç–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∏–¥–∏–º—ã—Ö –±–ª–æ–∫–æ–≤
              button.classList.add('seo-block__button--even');
            } else {
              // ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —á–µ—Ç–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
              button.classList.remove('seo-block__button--even');
            }
          } else {
            // ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å, –µ—Å–ª–∏ —à–∏—Ä–∏–Ω–∞ –º–µ–Ω—å—à–µ 768px
            button.classList.remove('seo-block__button--even');
          }
        };

        // ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        updateButtonStyle();

        // ‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏
        button.addEventListener('click', function () {
          if (visibleCount < showBlocks.length) {
            // ‚ö†Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —Ç—Ä–∏ –±–ª–æ–∫–∞
            for (let i = 0; i < blocksToShow; i++) {
              if (visibleCount < showBlocks.length) {
                // ‚ö†Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫
                showBlocks[visibleCount].classList.remove('hidden');
                // ‚ö†Ô∏è –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–∏–¥–∏–º—ã—Ö –±–ª–æ–∫–æ–≤
                visibleCount++;
              }
            }
            // ‚ö†Ô∏è –ï—Å–ª–∏ –≤—Å–µ –±–ª–æ–∫–∏ –ø–æ–∫–∞–∑–∞–Ω—ã, –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞ "–°–≤–µ—Ä–Ω—É—Ç—å"
            if (visibleCount === showBlocks.length) {
              // ‚ö†Ô∏è –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ "–°–≤–µ—Ä–Ω—É—Ç—å"
              buttonText.textContent = '–°–≤–µ—Ä–Ω—É—Ç—å';
              // ‚ö†Ô∏è –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—Ä–∞—â–µ–Ω–∏—è
              button.classList.add('_rotate-button');
            }
          } else {
            // ‚ö†Ô∏è –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ "–°–≤–µ—Ä–Ω—É—Ç—å", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –±–ª–æ–∫–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            showBlocks.forEach((showBlock, index) => {
              if (index >= 1) {
                showBlock.classList.add('hidden'); // –°–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫–∏ —Å–Ω–æ–≤–∞
              }
            });
            // ‚ö†Ô∏è –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–∏–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤
            visibleCount = 1;
            // ‚ö†Ô∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ
            // buttonText.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ';
            buttonText.textContent = backText;
            // ‚ö†Ô∏è –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—Ä–∞—â–µ–Ω–∏—è
            button.classList.remove('_rotate-button');
          }

          // ‚ö†Ô∏è –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
          updateButtonStyle();
        });
      }
    });
  });
}

//* ‚úÖ - [ Sidebar - Menu ]
export function toggleSidebarMenu(sidebarMenu) {
  const asideButton = document.querySelector('.page__aside-button');
  if (sidebarMenu.classList.contains('_open-menu')) {
    sidebarMenu.classList.remove('_open-menu');

    resetScrollbarOffset();
    document.body.classList.remove('no-scroll');
    resetTransitionOnce(sidebarMenu);

    if (asideButton) {
      setTimeout(() => {
        asideButton.style.opacity = '1';
        asideButton.style.transition = 'opacity 0.3s ease';
        asideButton.style.pointerEvents = 'all';
      }, 300);
    }
  } else {
    if (asideButton) {
      asideButton.style.opacity = '0';
      asideButton.style.transition = 'opacity 0.3s ease';
      asideButton.style.pointerEvents = 'none';
    }
    sidebarMenu.style.transition = 'transform 0.3s ease';
    sidebarMenu.classList.add('_open-menu');

    document.body.classList.add('no-scroll');
    resetTransitionOnce(sidebarMenu);
  }

  function resetTransitionOnce(element) {
    function transitionEndHandler() {
      element.style.transition = '';
      element.removeEventListener('transitionend', transitionEndHandler);
    }

    element.addEventListener('transitionend', transitionEndHandler);
  }
}
//* ‚úÖ - [ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω ]
export function toggleModalOpen() {
  const modals = [
    {
      triggerSelector: '.login-button',
      modalSelector: '.page__form-login',
    },
    {
      triggerSelector: '.phone-call',
      modalSelector: '.page__order-call',
    },
  ];

  modals.forEach(({ triggerSelector, modalSelector }) => {
    const modal = document.querySelector(modalSelector);
    const triggers = document.querySelectorAll(triggerSelector);
    const closeBtn = modal.querySelector('.btn-close');

    triggers.forEach((btn) => {
      btn.addEventListener('click', () => {
        handleScrollbarOffset(modal);
        document.body.classList.add('no-scroll');
        modal.classList.add('is-open');

        if (modalSelector === '.questions-form') {
          const { showFieldset } = fieldSetsToggle(); // –ü–æ–ª—É—á–∞–µ–º showFieldset
          showFieldset(0); // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π fieldset
        }
      });
    });

    closeBtn.addEventListener('click', () => {
      modal.classList.remove('is-open');
      document.body.classList.remove('no-scroll');

      if (modalSelector === '.questions-form') {
        const active = modal.querySelector(
          '.form-question__fieldset-table.active'
        );
        if (active) {
          active.classList.remove('active');
          console.log('–ö–ª–∞—Å—Å active —É–¥–∞–ª—ë–Ω');
        } else {
          console.log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ fieldset');
        }
      }
    });
  });
}
//* ‚úÖ - [–ö–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ–º –æ—Ç—Å—Ç—É–ø—ã ]
export function handleScrollbarOffset(enable) {
  const scrollbarWidth =
    window.innerWidth - document.documentElement.clientWidth;

  console.log('scrollbarWidth:', scrollbarWidth);

  if (enable && scrollbarWidth > 0) {
    document.body.style.paddingRight = `${scrollbarWidth}px`;
  } else {
    document.body.style.paddingRight = `0px`;
  }
}
//* ‚úÖ - [ –£—Å—Ç—Ä–∞–Ω—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ Contents  ]
function resetScrollbarOffset(el) {
  document.documentElement.style.removeProperty('--scroll-position');

  if (el) {
    el.style.paddingRight = '';
    pageHeader.style.paddingRight = ``;
  }

  //üîπ –£–±–∏—Ä–∞–µ–º –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—é scroll bar
  document.body.style.paddingRight = '';
  window.scrollTo(0, scrollY);
}
//* ‚úÖ - [ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ–º cookies ] -
export function cookiesAccept(el, trigger) {
  const cookiesAccept = document.querySelector(el);
  const button = document.querySelector(trigger);

  if (!cookiesAccept) return;

  if (button) {
    cookiesAccept.style.transform = 'translateY(110%)';
    button.addEventListener('click', () => {
      cookiesAccept.style.transform = 'translateY(110%)';
      cookiesAccept.style.transition = 'transform 0.5s ease';
    });
  } else {
    console.log('–∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }

  setTimeout(() => {
    cookiesAccept.style.transform = 'translateY(0)';
    cookiesAccept.style.transition = 'transform 0.5s ease';
  }, 3000);
}
//* ‚úÖ - [–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã]
export function fieldSetsToggle() {
  const container = document.querySelector('.form-question__content');
  const fieldSets = document.querySelectorAll(
    '.form-question .form-question__fieldset-table'
  );
  let current = 0;

  const updateContainerHeight = () => {
    const active = container.querySelector(
      '.form-question__fieldset-table.active'
    );
    if (active) {
      const height = active.offsetHeight;
      container.style.height = `${height}px`;
    }
  };

  const showFieldset = (index) => {
    fieldSets.forEach((fs) => fs.classList.remove('active'));
    fieldSets[index].classList.add('active');
    updateContainerHeight();
  };

  document.querySelectorAll('._btn-next').forEach((btn) => {
    btn.addEventListener('click', () => {
      if (current < fieldSets.length - 1) {
        current++;
        showFieldset(current);
      }
    });
  });

  document.querySelectorAll('._btn-prev').forEach((btn) => {
    btn.addEventListener('click', () => {
      if (current > 0) {
        current--;
        showFieldset(current);
      }
    });
  });

  return {
    showFieldset, // üëà —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º
  };
}

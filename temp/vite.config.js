import { defineConfig } from 'vite'; // üëà
import { resolve } from 'path'; // üëà
import postcssMediaMinMax from 'postcss-media-minmax'; // üëà
import autoprefixer from 'autoprefixer'; // üëà
import { fonts } from './vite/tasks/fonts.js'; // üëà
import { fontStyle } from './vite/tasks/fontsStyle'; // üëà
import { viteConvertPugInHtml } from '@mish.dev/vite-convert-pug-in-html';
import { compileScss } from './vite/tasks/scss.js'; // üëà
import { convertImagesToWebp } from './vite/tasks/webp.js'; // üëà

//* data - –¥–∞–Ω–Ω—ã–µ
// import data from './src/data/data.json' with { type: 'json' }; // üëà —Å—Ç–∞—Ä—ã–π –∏–º–ø–æ—Ä—Ç –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω
import { jsonMergePlugin } from './vite/tasks/jsonMerge.js'; // üëà –Ω–æ–≤—ã–π —Ç–∞—Å–∫ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è JSON
// import data from './src/data/data.json' with { type: 'json' }; // üëà –∏–º–ø–æ—Ä—Ç –æ—Å—Ç–∞—ë—Ç—Å—è, –Ω–æ —Ç–µ–ø–µ—Ä—å —Ñ–∞–π–ª –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

// üîπ –°–Ω–∞—á–∞–ª–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç—ã –ø–µ—Ä–µ–¥ dev/build
fonts('./public/fonts');

export default defineConfig(({ command }) => {
  const isProd = command === 'build';

  // üëá –ì–µ–Ω–µ—Ä–∞—Ü–∏—è data.json –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º

  return {
    plugins: [
      jsonMergePlugin(), // üëà –¥–æ–±–∞–≤–∏–ª–∏ —Å—é–¥–∞
      fonts(),
      // –ó–∞–ø—É—Å–∫–∞–µ–º compileScss() —Ç–æ–ª—å–∫–æ –ø—Ä–∏ build
      ...(isProd ? [compileScss()] : []),
      fontStyle(),
      convertImagesToWebp({
        inputDir: 'public/img', // –ø–∞–ø–∫–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
        quality: 80,
      }),
      viteConvertPugInHtml({
        minify: true,
        locals: {
          // üëà  –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É @@ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
          '@@webRoot': isProd ? './' : '/',
          // üëà  –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å webRoot –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
          webRoot: isProd ? './' : '/',
          ...data,
        },
        pugOptions: {
          pretty: !isProd, // üëà —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ development
          // üëà  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ Pug –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        },
      }),
    ],
    base: './',
    server: {
      open: true,
      watch: {
        ignored: ['**/src/data/data.json'], // üëà –∏—Å–∫–ª—é—á–∞–µ–º data.json –∏–∑ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
      },
    },
    css: {
      devSourcemap: true,
      postcss: {
        plugins: [
          autoprefixer({
            cascade: false,
            overrideBrowserslist: [
              'last 2 versions',
              'ie >= 10',
              '> 1%',
              'not dead',
            ],
          }),
          ...(isProd ? [] : [postcssMediaMinMax()]), // üëà –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å–æ–≤
        ],
      },
      preprocessorOptions: {
        scss: {},
      },
    },
    resolve: {
      alias: {
        '@': resolve(__dirname, 'src'),
      },
    },
    build: {
      outDir: 'build',
      emptyOutDir: true,
      sourcemap: !isProd, // üëà  –∫–∞—Ä—Ç—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ Production
      rollupOptions: {
        input: {
          main: resolve(__dirname, 'index.html'),
          // about: resolve(__dirname, 'page/about.html'),
          // contacts: resolve(__dirname, 'page/contacts.html'),
        },
      },
    },
  };
});
